/*
 * generated by Xtext 2.13.0
 */
package nl.mikero.andle.formatting2

import Code.Branch
import Code.Script
import Code.Statement
import com.google.inject.Inject
import nl.mikero.andle.services.CodeGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class CodeFormatter extends AbstractFormatter2 {
	
	@Inject extension CodeGrammarAccess

	def dispatch void format(Script script, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Statement statement : script.getStatements()) {
			statement.format;
		}
	}

	def dispatch void format(Branch branch, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (Statement statement : branch.getIfTrue()) {
			statement.format;
		}
		for (Statement statement : branch.getIfFalse()) {
			statement.format;
		}
	}
	
	// TODO: implement for 
}
